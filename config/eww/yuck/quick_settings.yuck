(defwidget quick_settings []
    (box :orientation "v" :class "quick_settings_box" :space-evenly true
        (box :orientation "h" :space-evenly true
            (network)
            (music)     
        )
         (box :orientation "h" :space-evenly true
            (bluetooth) 
            (others)
        )
    )
)

(defwidget quick_settings_button [condition action icon label class]
    (button :onclick {action} :class {condition ? "quick_settings_button ${class}" : "quick_settings_button quick_settings_button_toggled ${class}"} :style "background-image: url('control_center_icons/wifi.png');" :class "wifi_icon"
        (box :orientation "h" :space-evenly false
            (box :orientation "h" :space-evenly false :halign "start"
                (label :class "quick-settings-icon" :text {icon})
            )
            (box :orientation "v" :class "quick-settings-info" :space-evenly false :halign "end" :valign "center"
                (box :orientation "h" :space-evenly false :halign "start"
                    (label :class "quick-settings-text" :text {label})
                )
                (box :orientation "h" :space-evenly false :halign "start"
                    (label :class {condition ? "quick-settings-state" : "quick-settings-state quick-settings-state-enabled"} :text {condition ? "Off" : "On"})
                )
            )
        )
    )
)

(defwidget network []
    (quick_settings_button  :condition {network.essid == "lo"} 
                            :action {network.essid == "lo" ? "XDG_CURRENT_DESKTOP='gnome' gnome-control-center wifi &" : "nmcli connection down id '${network.essid}'"}
                            :icon {network.essid == "lo" ? "󰤭" : network.signal == "" ? "󰤩" : network.signal < 25 ? "󰤟" : network.signal < 50 ? "󰤢" : network.signal < 75 ? "󰤥" : "󰤨"}
                            :label {network.essid == "lo" ? "Not connected" : network.essid}
                            :class "left-top-plite"
    )
)

(defwidget quick_setting_button  [condition action icon label class] 
    (button :onclick {action} :class {condition ? "quick_button ${class}" : "quick_button quick_button_toggled ${class}"} :style "background-image: url('control_center_icons/bluetooth.png');" :class "bluetooth_icon"
        (box :orientation "h" :space-evenly false
            (box :orientation "h" :space-evenly false :halign "start"
                (label :class "quick-setting-icon" :text {icon})
            )
            (box :orientation "v" :class "quick-setting-info" :space-evenly false :halign "end" :valign "center"
                (box :orientation "h" :space-evenly false :halign "start"
                    (label :class "quick-setting-text" :text {label})
                )
                (box :orientation "h" :space-evenly false :halign "start"
                    (label :class {condition ? "quick-setting-state" : "quick-setting-state quick-setting-state-enabled"} :text {condition ? "Off" : "On"})
                )
            )
        )
    )
)


(defwidget bluetooth []
  (quick_setting_button     :condition {current_theme == "light"} 
                            :action "scripts/bluetooth.sh --toggle &" 
                            :icon ""
                            :label ""
                            :class "left-center-plite"
    )
)

(defwidget quick_button [condition action icon label class] 
    (button :onclick {action} :class {condition ? "quick_button ${class}" : "quick_button quick_button_toggled ${class}"} :style "background-image: url('control_center_icons/left.png');" :class "others_icon"
        (box :orientation "h" :space-evenly false
            (box :orientation "h" :space-evenly false :halign "start"
                (label :class "quick-icon" :text {icon})
            )
            (box :orientation "v" :class "quick-info" :space-evenly false :halign "end" :valign "center"
                (box :orientation "h" :space-evenly false :halign "start"
                    (label :class "quick-text" :text {label})
                )
                (box :orientation "h" :space-evenly false :halign "start"
                    (label :class {condition ? "quick-state" : "quick-state quick-state-enabled"} :text {condition ? "Off" : "On"})
                )
            )
        )
    )
)

(defwidget others []
  (quick_button    :condition {current_theme == "light"} 
                   :action "gnome-control-center &"
                   :icon ""
                   :label ""
                   :class "left-bottom-plite"
    )
)
